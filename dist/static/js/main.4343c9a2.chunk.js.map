{"version":3,"sources":["services/firebase.js","components/client-sheet.js","components/clients.js","components/delivery-sheet.js","components/delivery.js","components/table.js","components/orders.js","store/actons/addOrder.js","components/newNav.js","components/dateSelector.js","components/filterby.js","components/filterbyclient.js","components/search.js","components/tableAddToDelivery.js","components/addorderfordelivery.js","components/deliveryOrders.js","components/modalCalc.js","components/cards.js","components/selectClient.js","components/table-calc.js","components/calc.js","components/discardedTable.js","components/discardedSelector.js","components/discarded.js","components/calc-cards.js","components/more-orders.js","components/Home.js","components/login.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/orderReducer.js","store/reducers/rootReducer.js","index.js","style/logo.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","settings","timestampsInSnapshots","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","ClientSheet","state","name","mobile","client","region","s","console","log","ids","collection","onSnapshot","snapshot","clients","forEach","doc","data","dat","id","push","setState","TableContainer","Table","aria-label","TableHead","align","TableBody","this","map","index","component","scope","Button","onClick","e","preventDefault","swal","dangerMode","buttons","Ok","cancel","then","value","delete","variant","startIcon","React","Component","Client","client_id","makeStyles","margin","spacing","width","handleChange","target","addDB","form","document","querySelector","add","Number","totalCalc","day","Date","dof3a","total","msg","classes","props","Container","maxWidth","TextField","className","label","onChange","bind","border","Delivery","delivery","calc","moment","format","get","catch","error","useStyles","table","minWidth","CustomizedTables","rows","orders","deleteOrder","Paper","row","key","order_id","date","toDate","price","shipping","far2Sha7n","adress","clientName","IDss","disabled","functions","addOrderFunction","httpsCallable","Order","order","dayOrders","btnState","addOrder","text","closeOnClickOutside","response","handelSelectClient","d","where","finishDof3a","update","addDof3a","dof11","maxID","sort","a","b","required","cl","onSubmit","type","InputLabelProps","shrink","Math","random","defaultValue","dof3at","connect","dispatch","getState","flexGrow","paper","ScrollableTabsButtonAuto","useState","setValue","src","logo","alt","signOut","AppBar","position","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","exact","to","Tab","MaterialUIPickers","selectedDate","setSelectedDate","filter","utils","DateFnsUtils","Grid","container","justify","KeyboardButtonProps","FilterBy","filteredOrders","handelFilter","filterbyclient","Search","handelChange","formControl","selectEmpty","marginTop","green","setRows","filterOrders","setFilterOrders","deliverys","setDeliverys","setDelivery","setIDs","btnDisable","useEffect","querySnapshot","IDs","FormControl","InputLabel","Select","labelId","MenuItem","filtered","length","days","round","ID","handelAdd","addorderfordelivery","updateOrderFunction","rand","getModalStyle","top","left","transform","formCell","formtext","boxShadow","shadows","padding","setcomment","far2sha7n","setfar2sha7n","settotal","calcFinish","setCalcFinish","modID","setModID","selectValue","setseletvalue","setOpen","goz2iState","setGoz2iState","handleChange12","done","comment21","toString","comment222","getElementById","old_price","price_temp","delivery_clc","client_clc","tot1","name1","far2sha7ntet","name11","mortaga3","name122","far2sha7ntet22","idtt","comment","handelSelecctkhara","handelBtn","tot","InputProps","readOnly","handelFar2Sha7n","calcDay","deliverydayCalc","flag","day1","SimpleModal","open","setOrders","ordersss","Modal","aria-labelledby","aria-describedby","onClose","bullet","display","title","pos","marginBottom","SimpleCard","Card","CardContent","Typography","gutterBottom","CardActions","selectClient","finishClientCalc","TableC","IDDS","setTotal","setBtnState","setDof3a","ro","total1","bob","dd","Calc","filteredclient","element","Discarded","textAlign","direction","setClients","setClientname","cards","setCards","cards1","card","clientname","car","cal","App","path","FilterByClient","ChooseDelivert","DeliveryOrders","clientProfile","calcCards","moreOrders","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","Login","handleSubmit","signInWithEmailAndPassword","email","password","u","err","show","test","Hidden","only","fullWidth","autoComplete","onConfirm","withWidth","user","authListener","onAuthStateChanged","Home","Boolean","window","location","hostname","match","initState","authReducer","orderReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4343c9a2.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport \"firebase/firebase-functions\";\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDhU6o2tAq3pmfO01SUuVqDBVCnOtKt0p4\",\r\n  authDomain: \"test-f3aab.firebaseapp.com\",\r\n  databaseURL: \"https://test-f3aab.firebaseio.com\",\r\n  projectId: \"test-f3aab\",\r\n  storageBucket: \"test-f3aab.appspot.com\",\r\n  messagingSenderId: \"926668681850\",\r\n  appId: \"1:926668681850:web:77745633ee953b0a9d81c3\",\r\n  measurementId: \"G-6ZHVFZYWYQ\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth =firebase.auth();\r\n\r\n\r\ndb.settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from 'sweetalert';\r\nimport '../style/base.css';\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\n\r\nclass ClientSheet extends React.Component {\r\n\r\n\r\n\r\n\r\n  state = {\r\n    name: null,\r\n    mobile: null,\r\n    client: null,\r\n    region: null,\r\n\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    db.collection('clients')\r\n\r\n      .onSnapshot(snapshot => {\r\n        const clients = [];\r\n        const ids = [];\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          const dat = doc.id;\r\n          clients.push(data);\r\n          ids.push(dat)\r\n\r\n        });\r\n\r\n        this.setState({\r\n          clients: clients,\r\n          ids: ids\r\n\r\n\r\n        });\r\n\r\n      })\r\n  };\r\n\r\n  s = () => {\r\n    console.log(this.state.ids[0]);\r\n  }\r\n\r\n  S\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <TableContainer >\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Headline of table */}\r\n              <StyledTableCell id=\"tbh\" align=\"center\">اسم العميل</StyledTableCell>\r\n              <StyledTableCell id=\"tbh\" align=\"center\">الموبايل</StyledTableCell>\r\n              <StyledTableCell id=\"tbh\" align=\"center\">المنطقة</StyledTableCell>\r\n              <StyledTableCell id=\"tbh\" align=\"center\">إزالة عميل</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n\r\n\r\n          <TableBody id=\"row-sheet\">\r\n\r\n\r\n            {this.state.clients && this.state.clients.map((client, index) => {\r\n\r\n\r\n              return (\r\n                // Content of Table\r\n                <StyledTableRow id=\"cell\" name=\"client-dd\" >\r\n                  <StyledTableCell id=\"cell\" name=\"name\" align=\"center\" component=\"th\" scope=\"row\">{client.name}</StyledTableCell>\r\n                  <StyledTableCell id=\"cell\" name=\"mobile\" align=\"center\">{client.mobile}</StyledTableCell>\r\n                  <StyledTableCell id=\"cell\" name=\"region\" align=\"center\">{client.region}</StyledTableCell>\r\n                  <StyledTableCell id=\"cell\" name=\"button\" align=\"center\">\r\n                    <Button onClick=\r\n                      {\r\n                        e => {\r\n                          e.preventDefault()\r\n\r\n                          swal(\"متاكد عايز تمسح العميل ده؟\", {\r\n                            dangerMode: true,\r\n                            buttons: {\r\n                              Ok: \"OK\",\r\n                              cancel: \"cancel\"\r\n                            }\r\n                          })\r\n                            .then((value) => {\r\n                              switch (value) {\r\n                                case \"Ok\":\r\n                                  db.collection('clients').doc(this.state.ids[index]).delete();\r\n                                  swal(\"العميل تم مسحه\", \" \", \"success\");\r\n                                  break\r\n\r\n                                default:\r\n                                  swal(\"مافيش حاجه اتمسحت\")\r\n                              }\r\n\r\n                            })\r\n\r\n\r\n\r\n                        }\r\n                      }\r\n                      variant=\"contained\" id=\"btn\" startIcon={<DeleteIcon align=\"center\" />}> Delete\r\n                                           </Button>\r\n                  </StyledTableCell>\r\n\r\n\r\n                </StyledTableRow>\r\n\r\n              )\r\n            })\r\n            }\r\n          </TableBody>\r\n\r\n\r\n\r\n\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientSheet;","import React from 'react';\r\nimport { db } from '../services/firebase';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport ClientSheet from './client-sheet';\r\nimport '../style/base.css';\r\nimport PropTypes from 'prop-types';\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    border: 0,\r\n    margin: theme.spacing(1),\r\n\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nclass Client extends React.Component {\r\n\r\n\r\n\r\n  state = {\r\n    name: null,\r\n    mobile: null,\r\n    client: null,\r\n    region: null,\r\n    client_id: 0,\r\n  };\r\n\r\n  makeStyles = (theme => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(3),\r\n        width: 200,\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      [e.target.mobile]: e.target.value,\r\n      [e.target.client]: e.target.value,\r\n      [e.target.region]: e.target.value,\r\n    })\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n  };\r\n\r\n\r\n\r\n  addDB = (e) => {\r\n    const form = document.querySelector('#add');\r\n    console.log(form)\r\n    e.preventDefault();\r\n    db.collection('clients')\r\n      .add({\r\n        name: form.name.value,\r\n        mobile: form.mobile.value,\r\n        region: form.region.value,\r\n        client_id: Number(this.state.client_id) + 1,\r\n        totalCalc: [{\r\n          day: new Date(),\r\n          dof3a: 0,\r\n          total: 0\r\n        }]\r\n      })\r\n    let msg = \"تم اضافة عميل :  \" + form.name.value\r\n    swal(\"تم اضافة عميل \", msg, \"success\");\r\n    form.name.value = '';\r\n    form.mobile.value = '';\r\n    form.region.value = '';\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n\r\n    return (\r\n\r\n      <div  >\r\n        <h1>إضافة عميل</h1>\r\n        <Container id=\"contanier\" maxWidth=\"md\">\r\n\r\n          <form id=\"add\">\r\n            <TextField className={classes.root} id=\"outlined-basic\" label=\"الاسم\" variant=\"outlined\" name=\"name\" onChange={this.handleChange.bind(this)} />\r\n            <TextField className={classes.root} id=\"outlined-basic\" label=\"الموبايل\" variant=\"outlined\" name=\"mobile\" onChange={this.handleChange.bind(this)} />\r\n            <TextField className={classes.root} id=\"outlined-basic\" label=\"المنطقة\" variant=\"outlined\" name=\"region\" onChange={this.handleChange.bind(this)} />\r\n            <Button id=\"add-btn\" variant=\"contained\" onClick={this.addDB.bind(this)}>أضف</Button>\r\n          </form>\r\n        </Container>\r\n\r\n\r\n        <ClientSheet />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nClient.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\nexport default withStyles(styles)(Client);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport swal from 'sweetalert';\r\nimport '../style/base.css';\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\n\r\nclass ClientSheet extends React.Component {\r\n\r\n\r\n\r\n\r\n  state = {\r\n    name: null,\r\n    mobile: null,\r\n    client: null,\r\n    region: null,\r\n\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    db.collection('delivery')\r\n\r\n      .onSnapshot(snapshot => {\r\n        const clients = [];\r\n        const ids = [];\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          const dat = doc.id;\r\n          clients.push(data);\r\n          ids.push(dat)\r\n\r\n        });\r\n\r\n        this.setState({\r\n          clients: clients,\r\n          ids: ids\r\n\r\n\r\n        });\r\n\r\n      })\r\n  };\r\n\r\n  s = () => {\r\n    console.log(this.state.ids[0]);\r\n  }\r\n\r\n  S\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <TableContainer >\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* Headline of table */}\r\n              <StyledTableCell id=\"tbh\" align=\"center\">اسم المندوب</StyledTableCell>\r\n              <StyledTableCell id=\"tbh\" align=\"center\">الموبايل</StyledTableCell>\r\n              <StyledTableCell id=\"tbh\" align=\"center\">إزالة عميل</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n\r\n\r\n          <TableBody id=\"row-sheet\">\r\n\r\n\r\n            {this.state.clients && this.state.clients.map((client, index) => {\r\n\r\n\r\n              return (\r\n                // Content of Table\r\n                <StyledTableRow id=\"cell\" name=\"client-dd\" >\r\n                  <StyledTableCell id=\"cell\" name=\"name\" align=\"center\" component=\"th\" scope=\"row\">{client.name}</StyledTableCell>\r\n                  <StyledTableCell id=\"cell\" name=\"mobile\" align=\"center\">{client.mobile}</StyledTableCell>\r\n                  <StyledTableCell id=\"cell\" name=\"button\" align=\"center\">\r\n                    <Button onClick=\r\n                      {\r\n                        e => {\r\n                          e.preventDefault()\r\n\r\n                          swal(\"متاكد عايز تمسح المندوب ده؟\", {\r\n                            dangerMode: true,\r\n                            buttons: {\r\n                              Ok: \"OK\",\r\n                              cancel: \"cancel\"\r\n                            }\r\n                          })\r\n                            .then((value) => {\r\n                              switch (value) {\r\n                                case \"Ok\":\r\n                                  db.collection('delivery').doc(this.state.ids[index]).delete();\r\n                                  swal(\"المندوب تم مسحه\", \" \", \"success\");\r\n                                  break\r\n\r\n                                default:\r\n                                  swal(\"مافيش حاجه اتمسحت\")\r\n                              }\r\n\r\n                            })\r\n\r\n\r\n\r\n                        }\r\n                      }\r\n                      variant=\"contained\" id=\"btn\" startIcon={<DeleteIcon align=\"center\" />}> Delete\r\n                                           </Button>\r\n                  </StyledTableCell>\r\n\r\n\r\n                </StyledTableRow>\r\n\r\n              )\r\n            })\r\n            }\r\n          </TableBody>\r\n\r\n\r\n\r\n\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClientSheet;","import React from 'react';\r\nimport { db } from '../services/firebase';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../style/base.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport swal from \"sweetalert\";\r\nimport ClientSheet from './delivery-sheet';\r\nimport moment from \"moment\";\r\nconst styles = theme => ({\r\n  root: {\r\n    border: 0,\r\n    margin: theme.spacing(1),\r\n\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nclass Delivery extends React.Component {\r\n\r\n  state = {\r\n    name: null,\r\n    mobile: null,\r\n    delivery: null\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      [e.target.mobile]: e.target.value,\r\n      [e.target.delivery]: e.target.value\r\n    })\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    db.collection('delivery')\r\n      .get()\r\n      .then(snapshot => {\r\n        const delivery = [];\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          delivery.push(data);\r\n        });\r\n        this.setState({ delivery: delivery });\r\n        console.log(snapshot);\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  addDB = (e) => {\r\n    const form = document.querySelector('#add0');\r\n    e.preventDefault();\r\n    db.collection('delivery')\r\n      .add({\r\n        name: form.name.value,\r\n        mobile: form.mobile.value,\r\n        calc: [{ \"day\": moment(new Date()).format('L'), \"total\": 0 }]\r\n      })\r\n    let msg = \" تم اضافة مندوب جديد باسم :  \" + form.name.value\r\n    swal(\"  تم اضافة مندوب جديد \", msg, \"success\");\r\n    form.name.value = '';\r\n    form.mobile.value = '';\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n\r\n\r\n      <div className=\"App\">\r\n\r\n        <h1>إضافة مندوب</h1>\r\n\r\n        <Container  >\r\n\r\n\r\n          <form id=\"add0\"  >\r\n\r\n            <TextField className={classes.root} id=\"outlined-basic\" label=\"الاسم\" variant=\"outlined\" name=\"name\" onChange={this.handleChange.bind(this)} />\r\n\r\n            <TextField className={classes.root} id=\"outlined-basic\" label=\"الموبايل\" variant=\"outlined\" name=\"mobile\" onChange={this.handleChange.bind(this)} />\r\n\r\n            <Button variant=\"contained\" id=\"add-btn\" onClick={this.addDB.bind(this)}>\r\n              أضف\r\n                  </Button>\r\n\r\n            <br />\r\n            <br />\r\n          </form>\r\n        </Container>\r\n        <ClientSheet />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDelivery.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\nexport default withStyles(styles)(Delivery);","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from \"moment\";\r\nimport swal from 'sweetalert';\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport '../style/base.css'\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nexport default function CustomizedTables(props) {\r\n    const rows = props.orders\r\n    const classes = useStyles();\r\n    const deleteOrder = props.delete;\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell id=\"tbh\" >ID</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">العميل</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">اليوم</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">السعر</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">فرق الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">العنوان</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الموبايل</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">اسم العميل</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">إزالة اوردر</StyledTableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n\r\n                        <StyledTableRow key={[row.order_id]}>\r\n                            <StyledTableCell id=\"cell\" component=\"th\" scope=\"row\">\r\n                                {row.order_id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.client}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{moment(row.date.toDate()).format('LL')}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.price}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.shipping}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.far2Sha7n || \"0\"}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.adress}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.mobile}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.clientName}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\"><Button onClick=\r\n                                {\r\n                                    e => {\r\n                                        e.preventDefault()\r\n\r\n                                        swal(\"متاكد عايز تمسح الاوردر ده؟\", {\r\n                                            dangerMode: true,\r\n                                            buttons: {\r\n                                                Ok: \"OK\",\r\n                                                cancel: \"Cancel\"\r\n                                            }\r\n                                        })\r\n                                            .then((value) => {\r\n                                                console.log(row.IDss)\r\n                                                switch (value) {\r\n                                                    case \"Ok\":\r\n                                                        db.collection('orders').doc(row.IDss).delete();\r\n                                                        swal(\"الاوردر تم مسحه\", \" \", \"success\");\r\n                                                        break\r\n\r\n                                                    default:\r\n                                                        swal(\"مافيش حاجه اتمسحت\")\r\n                                                }\r\n\r\n                                            })\r\n\r\n\r\n\r\n                                    }\r\n                                }\r\n                                variant=\"contained\" id=\"btn\" disabled={!deleteOrder} startIcon={<DeleteIcon align=\"center\" />}> Delete\r\n                           </Button> </StyledTableCell>\r\n\r\n                        </StyledTableRow>\r\n\r\n                    ))}\r\n\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { db } from '../services/firebase';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from \"./table\";\r\nimport '../style/base.css'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport swal from \"sweetalert\";\r\nimport swal2 from \"sweetalert2\";\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux'\r\nimport { addOrder } from '../store/actons/addOrder'\r\nimport firebase from '../services/firebase';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    border: 0,\r\n    margin: theme.spacing(1),\r\n\r\n  },\r\n});\r\nconst functions = firebase.functions()\r\nconst addOrderFunction = functions.httpsCallable(\"addOrder\")\r\nconst addDof3aFunction = functions.httpsCallable(\"addDof3a\")\r\n\r\nclass Order extends React.Component {\r\n\r\n  state = {\r\n\r\n    shipping: null,\r\n    mobile: null,\r\n    price: null,\r\n    order: [],\r\n    adress: null,\r\n    dayOrders: [],\r\n    clients: [],\r\n    client: \"اختار عميل\",\r\n    btnState: false,\r\n    dof3a: 0,\r\n    far2Sha7n: 0,\r\n    data: {}\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    db.collection('clients')\r\n      .onSnapshot(snapshot => {\r\n        const clients = [];\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          clients.push(data);\r\n        });\r\n        this.setState({ clients: clients });\r\n\r\n      })\r\n    let maxID = 0\r\n    db.collection('orders')\r\n      .onSnapshot(snapshot => {\r\n        const orders = [];\r\n        snapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          if (data.order_id > maxID) {\r\n            maxID = data.order_id\r\n          }\r\n          data[\"IDss\"] = doc.id\r\n          orders.push(data);\r\n        });\r\n        orders.sort((a, b) => {\r\n          if (a.date > b.date) {\r\n            return -1\r\n          } else\r\n            return 1\r\n        })\r\n        this.setState({\r\n          order: orders,\r\n        });\r\n      })\r\n\r\n  };\r\n\r\n\r\n  addOrder = (e) => {\r\n\r\n    const form = document.querySelector('#add3');\r\n    if (form.adress.value !== \"\" && form.price.value !== \"\"\r\n      && form.shipping.value !== \"\" && this.state.client !== \"\"\r\n      && this.state.client !== \"اختار عميل\" && form.far2Sha7n.value !== \"\") {\r\n\r\n\r\n      e.preventDefault();\r\n\r\n      // this.props.addOrder({\r\n      //   delivery: null,\r\n      //   client: this.state.client,\r\n      //   adress: form.adress.value,\r\n      //   mobile: form.mobile.value,\r\n      //   price: form.price.value,\r\n      //   shipping: form.shipping.value,\r\n      //   far2Sha7n: +(form.far2Sha7n.value),\r\n      //   date: new Date(),\r\n      //   order_id: Number(this.state.order_id) + 1,\r\n      //   clientName: form.clientName.value,\r\n      //   state: -1,\r\n      //   done: false\r\n\r\n      // })\r\n      swal(\r\n\r\n        {\r\n          text: \"جاري اضافة الاوردر\" + \"برجاء الانتظار ....\",\r\n          buttons: false,\r\n          closeOnClickOutside: false,\r\n\r\n        }\r\n      );\r\n      addOrderFunction({\r\n        client: this.state.client,\r\n        adress: form.adress.value,\r\n        mobile: form.mobile.value,\r\n        price: form.price.value,\r\n        shipping: form.shipping.value,\r\n        far2Sha7n: +(form.far2Sha7n.value),\r\n        clientName: form.clientName.value\r\n\r\n      }).then((response) => {\r\n\r\n\r\n        swal(\"تم اضافة اوردر\", \"...\", \"success\");\r\n\r\n      })\r\n\r\n      /*\r\n            db.collection('orders')\r\n      \r\n              .onSnapshot(snapshot => {\r\n                const orders = [];\r\n                const ides = [];\r\n                snapshot.forEach(doc => {\r\n                  const data = doc.data();\r\n                  const datt = doc.id;\r\n                  orders.push(data);\r\n                  ides.push(datt);\r\n                });\r\n                orders.sort((a, b) => {\r\n                  if (a.order_id > b.order_id) {\r\n                    return -1\r\n                  } else\r\n                    return 1\r\n                })\r\n                this.setState({\r\n                  order: orders,\r\n                  ides: ides,\r\n      \r\n                });\r\n              })\r\n      */\r\n\r\n    } else if (this.state.client === \"اختار عميل\" || this.state.client === \"\") {\r\n\r\n      swal(\"يادي النيلة...\", \"ماتختار يابني العميل ... ماصباح الفل بقي\", \"error\")\r\n    } else if (form.price.value === \"\") {\r\n\r\n      swal(\"اباااا حط السعر  بقي ماتتعبوناش معاكم\", {\r\n        dangerMode: true,\r\n        buttons: {\r\n          Ok: \"ماشي لامواخذة نسيت\"\r\n        }\r\n      })\r\n\r\n    } else if (form.shipping.value === \"\") {\r\n      swal(\"اباااا حط الشحن  بقي ماتتعبوناش معاكم\", {\r\n        dangerMode: true,\r\n        buttons: {\r\n          Ok: \"ماشي لامواخذة نسيت\",\r\n        }\r\n      })\r\n    }\r\n    else if (form.adress.value === \"\") {\r\n\r\n      swal(\"اباااا حط العنوان بقي ماتتعبوناش معاكم\", {\r\n        dangerMode: true,\r\n        buttons: {\r\n          Ok: \"ماشي لامواخذة نسيت\"\r\n        }\r\n      })\r\n    }\r\n\r\n  };\r\n\r\n  handelSelectClient = (e) => {\r\n    let d = 0\r\n    db.collection('clients').where('name', '==', e.target.value)\r\n      .get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          d = doc.data().dof3a\r\n        })\r\n      })\r\n\r\n\r\n\r\n    this.setState({\r\n      client: e.target.value,\r\n      dof3a: d,\r\n      btnState: false\r\n    })\r\n  }\r\n  finishDof3a = (e) => {\r\n    db.collection(\"clients\").where(\"name\", \"==\", this.state.client)\r\n      .get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          db.collection('clients').doc(doc.id).update({ dof3a: 0 })\r\n        })\r\n      })\r\n  }\r\n  addDof3a = (e) => {\r\n    const form = document.querySelector('#add2');\r\n    let dof11 = +form.dof3a.value\r\n    db.collection(\"clients\").where(\"name\", \"==\", this.state.client)\r\n      .get().then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          dof11 += doc.data().dof3a\r\n          db.collection('clients').doc(doc.id).update({ dof3a: dof11 })\r\n        })\r\n      })\r\n\r\n    // .then(function (querySnapshot) {\r\n    //   querySnapshot.forEach(function (doc) {\r\n    //     const totalCalc = doc.data().totalCalc || []\r\n    //     let i = 0;\r\n\r\n    //     totalCalc.forEach(bob => {\r\n\r\n    //       if (moment(bob.day.toDate()).format('l') === moment(new Date()).format('l')) {\r\n    //         bob.dof3a += +(form.dof3a.value)\r\n\r\n    //       } else {\r\n    //         i++;\r\n    //       }\r\n    //     })\r\n\r\n    //     if (i === totalCalc.length) {\r\n\r\n    //       totalCalc.push({\r\n    //         day: moment(new Date()).format('L'),\r\n    //         total: 0,\r\n    //         dof3a: +(form.dof3a.value)\r\n    //       })\r\n\r\n    //     }\r\n\r\n    //     db.collection('clients').doc(doc.id).update({ totalCalc: totalCalc })\r\n    //   });\r\n\r\n\r\n    // });\r\n    this.setState({\r\n      dof3a: dof11,\r\n      btnState: true,\r\n\r\n    })\r\n    let msg = \" تم اضافة دفعة بملغ \" + form.dof3a.value + \" للعميل : \" + this.state.client\r\n\r\n    swal(\"تم اضافة دفعة!\", msg, \"success\");\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    console.log(\"Redux Test\", this.props)\r\n\r\n    return (\r\n      <div className=\"FormField\">\r\n\r\n        <select name='client' value={this.state.client} onChange={this.handelSelectClient} required >\r\n          <option value=\"\">{this.state.client}</option>\r\n          {this.state.clients.map(cl => {\r\n\r\n            return <option value={cl.name}>{cl.name + \" : \" + cl.dof3a}</option>\r\n          })}\r\n        </select>\r\n\r\n        <form id=\"add2\" onSubmit={this.addDof3a}>\r\n\r\n          <TextField\r\n            id=\"outlined-basic2\"\r\n            label=\"دفعة\"\r\n            type=\"number\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            name=\"dof3a\"\r\n          />\r\n\r\n          <Button id=\"btnorder2\" variant=\"contained\" color=\"primary\" onClick={this.addDof3a} disabled={this.state.btnState}>\r\n            إضافة دفعة\r\n          </Button>\r\n          <Button id=\"btnorder2\" variant=\"contained\" color=\"primary\" onClick={this.finishDof3a} >\r\n            انهاء الدفعة\r\n        </Button>\r\n        </form>\r\n\r\n        <h1>  إضافة أوردر جديد </h1>\r\n        <Container id=\"cont\">\r\n          <form id=\"add3\" onSubmit={this.addOrder} key={Math.random()}>\r\n            <TextField className={classes.root} id=\"outlined-basic2\" label=\"السعر\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"price\" required />\r\n            <TextField className={classes.root} id=\"outlined-number\" label=\"سعر الشحن\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"shipping\" required />\r\n            <TextField className={classes.root} id=\"outlined-basic7\" defaultValue=\"0\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"far2Sha7n\" required />\r\n            <TextField className={classes.root} id=\"outlined-basic2\" label=\"الموبايل\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"mobile\" required />\r\n            <TextField className={classes.root} id=\"outlined-basic2\" label=\"العنوان\" variant=\"outlined\" name=\"adress\" required />\r\n            <TextField className={classes.root} id=\"outlined-basic2\" label=\"اسم العميل\" variant=\"outlined\" name=\"clientName\" required />\r\n            <Button variant=\"contained\" id=\"btnorder\" onClick={this.addOrder}>\r\n              أضف\r\n          </Button>\r\n          </form>\r\n        </Container>\r\n        <Table orders={this.state.order} delete={true} dof3at={this.state.dof3at} />\r\n\r\n      </div >\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nOrder.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addOrder: (order) => dispatch(addOrder(order))\r\n  }\r\n}\r\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(Order));\r\n","\r\nimport { db } from '../../services/firebase';\r\nexport const addOrder = (order) => {\r\n    return (dispatch, getState) => {\r\n        db.collection('orders')\r\n            .add(order)\r\n        dispatch({ type: \"ADD_ORDER\", order })\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../style/logo.png';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../style/base.css';\r\nimport firebase from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleLogout=()=>{\r\n   \r\n }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <nav className=\"Navbar\"  >\r\n        <img src={logo} alt=\"logo.png\" />\r\n        \r\n        <Button onClick=\r\n                      {\r\n                        e => {\r\n                          e.preventDefault()\r\n\r\n                          swal(\"متاكد عايز تخرج ياخويا؟؟\", {\r\n                            dangerMode: true,\r\n                            buttons: {\r\n                              Ok: \"OK\",\r\n                              cancel: \"Cancel\"\r\n                            }\r\n                          })\r\n                            .then((value) => {\r\n                              switch (value) {\r\n                                case \"Ok\":\r\n                                  firebase.auth().signOut();\r\n                                  swal(\" طب ياعم ماشوفش وشك تاني  \", \" \", \"success\");\r\n                                  break\r\n\r\n                                default:\r\n                                  swal(\" اوكاي خلاص خليك \")\r\n                              }\r\n\r\n                            })\r\n                        }\r\n                      }\r\n                        id=\"btn-logout\" > تسجيل خروج\r\n                                           </Button>\r\n      </nav>\r\n      \r\n      <AppBar position=\"static\" id=\"nav\">\r\n\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <NavLink className=\"nav-link_IT\" exact to='/'><Tab id=\"tab\" label=\"العملاء\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/delivery'><Tab id=\"tab\" label=\"المناديب\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/order'><Tab id=\"tab\" label=\"الاوردرات\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/FilterBy'><Tab id=\"tab\" label=\"بحث بالتاريخ\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/FilterByClient'><Tab id=\"tab\" label=\"بحث بالعميل\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/Search'><Tab id=\"tab\" label=\"بحث\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/ChooseDelivert'><Tab id=\"tab\" label=\"توزيع اوردرات\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/DeliveryOrders'><Tab id=\"tab\" label=\"حساب المناديب\" /></NavLink>\r\n          {/* <NavLink className=\"nav-link_IT\" exact to='/clientProfile'><Tab label=\"7esab el 3amel\" /></NavLink> */}\r\n          <NavLink className=\"nav-link_IT\" exact to='/Calc'><Tab id=\"tab\" label=\"حساب العملاء\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/Discarded'><Tab id=\"tab\" label=\" المرتجعات\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/calcCards'><Tab id=\"tab\" label=\" دفتر العملاء\" /></NavLink>\r\n          <NavLink className=\"nav-link_IT\" exact to='/moreOrders'><Tab id=\"tab\" label=\"دفتر المناديب\" /></NavLink>\r\n\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from \"moment\";\r\nimport Table from \"./table\";\r\nimport Container from '@material-ui/core/Container';\r\nimport '../style/base.css'\r\n\r\n\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers(props) {\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n        \r\n    };\r\n    //console.log(moment(selectedDate).format('dddd'))\r\n    const orders = props.orders.filter(order => {\r\n        return moment(order.date.toDate()).format('dddd') === moment(selectedDate).format(\"dddd\");\r\n    });\r\n    //  console.log(orders)\r\n    return (\r\n        \r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n\r\n\r\n            <Container id=\"contdate\" >\r\n\r\n                <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Date picker dialog\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n                </Container>\r\n                <Table orders={orders} />\r\n\r\n\r\n\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateSelector from \"./dateSelector\";\r\nimport '../style/base.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass FilterBy extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n        order: [],\r\n        clients: [],\r\n        client: \"Choose Client\",\r\n        filteredOrders: []\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const clients = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    clients.push(data);\r\n                });\r\n                this.setState({ clients: clients });\r\n                console.log(this.state.clients);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        db.collection('orders')\r\n            .get()\r\n            .then(snapshot => {\r\n                const orders = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    orders.push(data);\r\n                });\r\n\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                this.setState({\r\n                    order: orders,\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n\r\n\r\n    };\r\n\r\n\r\n    handelSelectClient = (e) => {\r\n        this.setState({ client: e.target.value })\r\n\r\n    }\r\n    handelFilter = () => {\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            console.log(order.client, this.state.client)\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n        console.log(this.state.filteredOrders)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1>بحث عن الاوردرات بالتاريخ</h1>\r\n                <DateSelector delete={false}  orders={this.state.order} />\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <h1>بحث عن اوردرات العميل بالاسم و التاريخ</h1>\r\n                <center><select value={\"this.state.client\"} onChange={this.handelSelectClient} required >\r\n                    <option onChange={this.handelSelectClient} value={this.state.client}>{this.state.client}</option>\r\n                    {this.state.clients.map(cl => <option value={cl.name}>{cl.name}</option>)}\r\n                </select>\r\n                </center>\r\n                <center>\r\n                    <Button variant=\"contained\" id=\"btnorder\" onClick={this.handelFilter}>\r\n                        بحث\r\n                    </Button>\r\n                </center>\r\n                <DateSelector delete={false}  orders={this.state.filteredOrders} />\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nexport default FilterBy;","import React, { Component } from 'react'\r\nimport { db } from '../services/firebase';\r\nimport Table from \"./table\";\r\nimport Button from '@material-ui/core/Button';\r\nimport '../style/base.css';\r\nexport default class filterbyclient extends Component {\r\n\r\n    state = {\r\n\r\n        order: [],\r\n        clients: [],\r\n        client: \"Choose Client\",\r\n        filteredOrders: []\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const clients = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    clients.push(data);\r\n                });\r\n                this.setState({ clients: clients });\r\n                console.log(this.state.clients);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        db.collection('orders')\r\n            .get()\r\n            .then(snapshot => {\r\n                const orders = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    orders.push(data);\r\n                });\r\n\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                this.setState({\r\n                    order: orders,\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n\r\n\r\n    };\r\n\r\n\r\n    handelSelectClient = (e) => {\r\n        this.setState({ client: e.target.value })\r\n\r\n    }\r\n    handelFilter = () => {\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            console.log(order.client, this.state.client)\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select value={\"this.state.client\"} onChange={this.handelSelectClient} required >\r\n                    <option onChange={this.handelSelectClient} value={this.state.client}>{this.state.client}</option>\r\n                    {this.state.clients.map(cl => <option value={cl.name}>{cl.name}</option>)}\r\n                </select>\r\n                <center>\r\n                    <Button variant=\"contained\" id=\"btnorder\" onClick={this.handelFilter}>\r\n                        بحث\r\n                </Button>\r\n                </center>\r\n                <Table orders={this.state.filteredOrders} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { db } from '../services/firebase';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Table from \"./table\";\r\nimport '../style/base.css';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nexport default class Search extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n        orders: [],\r\n        filteredOrders: [],\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        db.collection('orders')\r\n            .get()\r\n            .then(snapshot => {\r\n                const orders = [];\r\n\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    orders.push(data);\r\n                });\r\n\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                this.setState({\r\n                    orders: orders,\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n    handelChange = (e) => {\r\n        const target = Number(e.target.value)\r\n        const filteredOrders = this.state.orders.filter(order => {\r\n            return (order.order_id === target)\r\n\r\n        })\r\n        this.setState({ filteredOrders })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                                    <h1>ID بحث من خلال ال</h1>\r\n\r\n                <Container id=\"contsearch\">\r\n                <TextField id=\"outlined-basic\" label=\"Order ID\" variant=\"outlined\"  name=\"order_ID\" onChange={this.handelChange} />\r\n\r\n                </Container>\r\n\r\n                <Table delete={false} orders={this.state.filteredOrders}  />\r\n            </div>\r\n        )\r\n    }\r\n}","import Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db } from '../services/firebase';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../style/base.css'\r\nimport swal from \"sweetalert\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(2),\r\n        minWidth: 200,\r\n\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2), color: green\r\n    },\r\n    table: {\r\n        minWidth: 200,\r\n\r\n    },\r\n}));\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nexport default function CustomizedTables() {\r\n    const [rows, setRows] = useState([])\r\n    const [filterOrders, setFilterOrders] = useState([])\r\n    const [deliverys, setDeliverys] = useState([])\r\n    const [delivery, setDelivery] = useState('E5tar mandob')\r\n    const [IDs, setIDs] = useState([])\r\n    const [btnDisable, setBtnDisable] = useState(false)\r\n    const three_days = 3 * (24 * 60 * 60 * 1000);\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('delivery')\r\n            .get()\r\n            .then(snapshot => {\r\n                const delivery = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    delivery.push(data);\r\n                });\r\n                setDeliverys(delivery);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        db.collection(\"orders\").where(\"state\", \"==\", -1)\r\n            .onSnapshot(function (querySnapshot) {\r\n                var orders = [];\r\n                const IDs = []\r\n                querySnapshot.forEach(function (doc) {\r\n                    orders.push(doc.data());\r\n                    IDs.push(doc.id);\r\n                });\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                setRows(orders)\r\n                setIDs(IDs)\r\n                setFilterOrders(orders)\r\n            });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const handleChange = event => {\r\n        setDelivery(event.target.value);\r\n\r\n    };\r\n    const handelSearch = (e) => {\r\n        const target = + e.target.value\r\n        const filtered = rows.filter(order => {\r\n            return (order.order_id === target)\r\n\r\n        })\r\n        if (filtered.length === 0)\r\n            setFilterOrders(rows)\r\n        else setFilterOrders(filtered)\r\n\r\n    }\r\n    const handelAdd = (ID, e) => {\r\n        e.preventDefault();\r\n        if (delivery === 'E5tar mandob') {\r\n            swal(\"اختار المندوب ياااا\", \"...\", \"error\");\r\n            } else {\r\n\r\n\r\n            db.collection(\"orders\").where(\"state\", \"==\", -1)\r\n                .onSnapshot(function (querySnapshot) {\r\n                    querySnapshot.forEach(function (doc) {\r\n                        if (doc.data().order_id === ID) {\r\n\r\n                            db.collection('orders').doc(doc.id).update({ state: 0, delivery: delivery })\r\n                        }\r\n                    });\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Container id=\"contselect\">\r\n                <FormControl required className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-required-label\">اختار المندوب</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label\"\r\n                        id=\"demo-simple-select-required\"\r\n                        value={[deliverys][0].name}\r\n                        onChange={handleChange}\r\n                        className={classes.selectEmpty}\r\n                    >\r\n                        {deliverys.map(delivery => <MenuItem value={delivery.name}>{delivery.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Container>\r\n\r\n\r\n            <h1>ID بحث من خلال ال</h1>\r\n            <Container id=\"contsearch\">\r\n                <TextField id=\"outlined-basic\" type=\"number\" label=\"Order ID\" variant=\"outlined\" name=\"order_ID\" onChange={handelSearch} />\r\n\r\n            </Container>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell id=\"tbh\">ID</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">العميل</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">اليوم</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">السعر</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">الشحن</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">العنوان</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">الموبايل</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">اسم العميل</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">أضف الأورد للمندوب || ({filterOrders.length})</StyledTableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {filterOrders.map(row => {\r\n                            if (new Date() - row.date.toDate() >= three_days) {\r\n                                const days = Math.round((new Date() - row.date.toDate()) / (24 * 60 * 60 * 1000)) + \" ايام \"\r\n                                swal(\"اوبش...\", \"عندك اوردارات فات عليها \" + days, \"error\");\r\n                            }\r\n                            return (\r\n                                <StyledTableRow key={[row.order_id]} className=\"red\" >\r\n                                    <StyledTableCell id=\"cell\" component=\"th\" scope=\"row\" >\r\n                                        {row.order_id}\r\n                                    </StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.client}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{moment(row.date.toDate()).format('LL')}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.price}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.shipping}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.adress}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.mobile}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">{row.clientName}</StyledTableCell>\r\n                                    <StyledTableCell id=\"cell\" align=\"right\">\r\n                                        <Button onClick={(e) => handelAdd(row.order_id, e)}\r\n                                            variant=\"contained\" id=\"btndelivery\"\r\n                                            startIcon={<AddShoppingCartIcon />}\r\n                                            disabled={btnDisable}\r\n\r\n                                        > إضافة\r\n                                </Button>\r\n                                    </StyledTableCell>\r\n                                </StyledTableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div >\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport Table from \"./tableAddToDelivery\";\r\n\r\nexport default class addorderfordelivery extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <Table />\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from \"moment\";\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport green from '@material-ui/core/colors/green';\r\nimport swal from 'sweetalert';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../style/base.css'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport firebase from '../services/firebase';\r\nimport { fromUnixTime } from 'date-fns';\r\nconst functions = firebase.functions()\r\nconst updateOrderFunction = functions.httpsCallable(\"updateOrder\")//Update el state bta3et el order elle wad7a aslan mn om l esm\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 100,\r\n\r\n    },\r\n    formCell: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 100,\r\n\r\n    },\r\n    formtext: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2), color: green\r\n    },\r\n    table: {\r\n        minWidth: 200,\r\n\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n\r\n}));\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nexport default function CustomizedTables() {\r\n    const [rows, setRows] = useState([])\r\n    const [filterOrders, setFilterOrders] = useState([])\r\n    const [deliverys, setDeliverys] = useState([])\r\n    const [delivery, setDelivery] = useState('E5tar mandob')\r\n    const [IDs, setIDs] = useState([])\r\n    const [btnDisable, setBtnDisable] = useState(false)\r\n    const [comment, setcomment] = useState(\"\")\r\n    const [far2sha7n, setfar2sha7n] = useState(0)\r\n    const [total, settotal] = useState(0)\r\n    const [teet, setTeet] = useState(0)\r\n    const [calcFinish, setCalcFinish] = useState(false)\r\n    const [modID, setModID] = useState(0)\r\n    const [selectValue, setseletvalue] = useState(0)\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(true);\r\n    const [hide, setHide] = useState(true)\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose12 = () => {\r\n        setOpen(false);\r\n    };\r\n    const [goz2iState, setGoz2iState] = React.useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [far2sha7n, goz2iState])\r\n    //handel select delivery's order\r\n\r\n    const handleChange = event => {\r\n\r\n        setDelivery(event.target.value);\r\n        db.collection(\"orders\").where(\"state\", \"==\", 0).where(\"delivery\", \"==\", event.target.value)\r\n            .get().then(function (querySnapshot) {\r\n                var orders = [];\r\n                let tot = total\r\n                let btnSS = \"btnState\"\r\n\r\n                querySnapshot.forEach(function (doc) {\r\n                    let data = doc.data()\r\n                    data[btnSS] = false\r\n                    data[\"done12\"] = false\r\n                    data[\"ID\"] = doc.id\r\n\r\n                    orders.push(data);\r\n                    tot += +(doc.data().price)\r\n                    tot += +(doc.data().shipping)\r\n                });\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                setFilterOrders(orders)\r\n                settotal(tot)\r\n                console.log(delivery)\r\n            });\r\n        setCalcFinish(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection('delivery')\r\n            .get()\r\n            .then(snapshot => {\r\n                const delivery = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    delivery.push(data);\r\n                });\r\n                setDeliverys(delivery);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n    }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     db.collection(\"orders\").where(\"state\", \"==\", 0).where(\"delivery\", \"==\", delivery)\r\n    //         .onSnapshot(function (querySnapshot) {\r\n    //             var orders = [];\r\n    //             querySnapshot.forEach(function (doc) {\r\n    //                 orders.push(doc.data());\r\n    //             });\r\n    //             orders.sort((a, b) => {\r\n    //                 if (a.order_id > b.order_id) {\r\n    //                     return -1\r\n    //                 } else\r\n    //                     return 1\r\n    //             })\r\n    //             setFilterOrders(orders)\r\n    //             console.log(delivery)\r\n    //         });\r\n\r\n    // }, [])\r\n\r\n\r\n\r\n    const handelSearch = (e) => {\r\n        const target = + e.target.value\r\n        const filtered = rows.filter(order => {\r\n            return (order.order_id === target)\r\n\r\n        })\r\n        if (filtered.length === 0)\r\n            setFilterOrders(rows)\r\n        else setFilterOrders(filtered)\r\n\r\n    }\r\n    const handelAdd = (ID, e) => { }\r\n    //     e.preventDefault();\r\n    //     if (delivery === 'E5tar mandob') {\r\n    //         console.log(\"matnsash el style ya bashmohandes OSOS\")\r\n    //     } else {\r\n\r\n\r\n    //         db.collection(\"orders\").where(\"state\", \"==\", -1)\r\n    //             .onSnapshot(function (querySnapshot) {\r\n    //                 querySnapshot.forEach(function (doc) {\r\n    //                     console.log(\"i\")\r\n    //                     if (doc.data().order_id === ID) {\r\n\r\n    //                         db.collection('orders').doc(doc.id).update({ state: 0, delivery: delivery })\r\n\r\n    //                         console.log(filterOrders)\r\n    //                     }\r\n    //                 });\r\n\r\n\r\n\r\n    //                 // db.collection(\"orders\")\r\n    //                 //     .get()\r\n    //                 //     .then(function (querySnapshot) {\r\n\r\n    //                 //         querySnapshot.forEach(function (doc) {\r\n    //                 //             console.log(\"i\")\r\n    //                 //             if (doc.data().order_id === ID) {\r\n\r\n    //                 //                 db.collection('orders').doc(doc.id).update({ state: 0, delivery: delivery })\r\n\r\n    //                 //                 console.log(filterOrders)\r\n    //                 //             }\r\n\r\n    //                 //         });\r\n    //                 //     }).catch(error => console.log(error));\r\n    //             })\r\n    //     }\r\n    // }\r\n    //                      70\r\n    ///                     71\r\n    function handleChange12(row, event) {\r\n\r\n        const form = document.querySelector('#ddss');\r\n      \r\n        row.done = true\r\n        const comment21 = row.order_id.toString() + \"comment\"\r\n        const comment222 = document.getElementById(comment21).value \r\n        setcomment(comment222)\r\n        console.log('lolo',comment222 );\r\n        let old_price = row.price\r\n        let mortaga3_price = 0\r\n        let price_temp = 0\r\n        if (selectValue !== 0) {\r\n            let delivery_clc = 0;\r\n            let client_clc = 0;\r\n            row.state = selectValue;\r\n            row.btnState = true\r\n            let tot1 = total\r\n            /***********Sha7n 3ala el rasel***************/\r\n            if (selectValue === 3) {\r\n                const name1 = row.order_id.toString() + \"far2Sha7n\"\r\n                const far2sha7ntet = +document.getElementById(name1).value\r\n\r\n                delivery_clc += 0\r\n                client_clc += row.shipping\r\n                tot1 -= +(far2sha7ntet)\r\n                tot1 -= +(row.shipping)\r\n                tot1 -= +(row.price)\r\n                price_temp = old_price\r\n\r\n            }//*************La8i************  \r\n            else if (selectValue === 2) {\r\n                delivery_clc += 0\r\n                client_clc += 0\r\n                tot1 -= +(row.price)\r\n                tot1 -= +(row.shipping)\r\n                price_temp = old_price\r\n\r\n            }\r\n            // ***************tam*********\r\n            else if (selectValue === 1) {\r\n                client_clc += 0\r\n                delivery_clc += +row.price\r\n                delivery_clc += +row.shipping\r\n                if (row.order_id === modID) {\r\n                    tot1 -= far2sha7n\r\n\r\n\r\n                }\r\n                const name1 = row.order_id.toString() + \"far2Sha7n\"\r\n                const far2sha7ntet = +document.getElementById(name1).value\r\n\r\n                tot1 -= +(far2sha7ntet)\r\n                delivery_clc -= +(far2sha7ntet) | 0\r\n                client_clc += +(far2sha7ntet) | 0\r\n                tot1 -= +(0)\r\n                price_temp = old_price\r\n            }\r\n            //tam daf3 el sha7n\r\n            else if (selectValue === 4) {\r\n                const name1 = row.order_id.toString() + \"far2Sha7n\"\r\n                const far2sha7ntet = +document.getElementById(name1).value\r\n                delivery_clc += +row.shipping\r\n                delivery_clc -= +(far2sha7ntet) | 0\r\n                client_clc += 0\r\n\r\n\r\n                tot1 -= +(far2sha7ntet)\r\n                tot1 -= +(row.price)\r\n                price_temp = old_price\r\n            }\r\n            // mortaga3 goz2i\r\n\r\n            else if (selectValue === 5) {\r\n                setGoz2iState(false)\r\n                delivery_clc += +row.price\r\n                const name11 = row.order_id.toString() + \"goz2ii\"\r\n                const mortaga3 = +document.getElementById(name11).value\r\n                const name1 = row.order_id.toString() + \"far2Sha7n\"\r\n                const far2sha7ntet = +document.getElementById(name1).value\r\n                delivery_clc -= +mortaga3\r\n                delivery_clc += +row.shipping\r\n                // delivery_clc -= +(form.far2Sha7n.value) | 0\r\n                delivery_clc -= far2sha7ntet | 0\r\n                client_clc += +mortaga3\r\n\r\n                client_clc += far2sha7ntet | 0\r\n                console.log(\"7essssaaaaasssaas\", delivery_clc, client_clc)\r\n                //mortaga3_price = +form.goz2ii.value;\r\n\r\n\r\n                tot1 -= +(far2sha7ntet)\r\n\r\n                tot1 -= (mortaga3)\r\n                price_temp = old_price - mortaga3\r\n            }\r\n\r\n            /* else if (selectValue === 5) {\r\n                 if (row.order_id === modID) {\r\n                     tot1 -= far2sha7n\r\n                 }\r\n \r\n                 tot1 -= +(row.far2Sha7n)\r\n \r\n                 tot1 -= +(gozdata.price.value)\r\n                 tot1 -= +(gozdata.shipping.value)\r\n                 db.collection(\"orders\").where(\"order_id\", \"==\", row.order_id)\r\n                     .onSnapshot(function (querySnapshot) {\r\n                         querySnapshot.forEach(function (doc) {\r\n                             db.collection('orders').doc(doc.id).update({\r\n                                 price: gozdata.price.value,\r\n                                 shipping: gozdata.shipping.value\r\n                             })\r\n                         })\r\n                     })\r\n \r\n             }*/\r\n            settotal(tot1)\r\n\r\n\r\n            swal(\r\n\r\n                {\r\n                    text: \"جاري انهاء الاوردر\" + \"برجاء الانتظار ....\",\r\n                    buttons: false,\r\n                    closeOnClickOutside: false,\r\n\r\n                }\r\n            );\r\n            setseletvalue(-2)\r\n\r\n            const name122 = row.order_id.toString() + \"far2Sha7n\"\r\n            const far2sha7ntet22 = +document.getElementById(name122).value\r\n            updateOrderFunction({\r\n                idtt: row.order_id,\r\n                state: selectValue,\r\n                comment: comment222.toString(),\r\n                far2Sha7n: far2sha7ntet22 | 0,\r\n                price: +price_temp,//price_mor\r\n                old_price: +old_price,\r\n                delivery_clc: delivery_clc,\r\n                client_clc: client_clc\r\n\r\n            }).then((response) => {\r\n\r\n\r\n                swal(\"تم تقفيل حساب اوردر\", \"...\", \"success\");\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            swal(\"ماتختار يابني حالة الاوردر ... ماصباح الفل بقي\", {\r\n                dangerMode: true,\r\n                buttons: {\r\n                    Ok: \"ماشي لامواخذة نسيت\",\r\n                }\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    function handleChangeDelivery() {\r\n        const form = document.querySelector(\"#deliveryCalc\")\r\n        const calcDay = +form.deliverydayCalc.value\r\n        db.collection('delivery').where('name', '==', delivery)\r\n            .get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    let flag = true\r\n                    const calc = doc.data().calc\r\n                    calc.forEach(day1 => {\r\n                        if (moment(new Date()).format('L') === day1.day && flag) {\r\n                            day1.total += calcDay\r\n                            flag = false\r\n                        }\r\n\r\n                    })\r\n                    if (flag) {\r\n                        calc.push({ \"day\": moment(new Date()).format('L'), total: calcDay })\r\n                    }\r\n\r\n\r\n\r\n                    db.collection('delivery').doc(doc.id).update({\r\n                        calc: calc\r\n                    })\r\n\r\n\r\n                });\r\n\r\n            })\r\n        setCalcFinish(true)\r\n        let msg = \"حساب المندوب :  \" + delivery + calcDay\r\n        swal(\"تم انهاء حساب المندوب \", msg, \"success\");\r\n\r\n\r\n    }\r\n    function handelSelecctkhara(e) {\r\n        setseletvalue(e.target.value)\r\n    }\r\n\r\n    function handelBtn(e) {\r\n        e.preventDefault();\r\n    }\r\n    function handelFar2Sha7n(row, event) {\r\n\r\n        setfar2sha7n(event.target.value)\r\n        setModID(row.order_id)\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Container id=\"contselect\">\r\n\r\n\r\n                <FormControl required className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-required-label\">اختار المندوب</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-required-label\"\r\n                        id=\"demo-simple-select-required\"\r\n                        value={[deliverys][0].name}\r\n                        onChange={handleChange}\r\n                        className={classes.selectEmpty}\r\n                    >\r\n\r\n                        {deliverys.map(delivery => <MenuItem value={delivery.name}>{delivery.name}</MenuItem>)}\r\n\r\n\r\n                    </Select>\r\n\r\n                </FormControl>\r\n\r\n            </Container>\r\n            <h1>ID بحث من خلال ال</h1>\r\n\r\n            <Container id=\"contsearch\">\r\n\r\n                <TextField id=\"outlined-basic\" type=\"number\" label=\"Order ID\" variant=\"outlined\" name=\"order_ID\" onChange={handelSearch} />\r\n\r\n            </Container>\r\n\r\n\r\n            <h1 align=\"center\" > {total} :حساب {delivery === 'E5tar mandob' ? \"المندوب\" : delivery} اليومي </h1>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell id=\"tbh\" >ID</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">اسم العميل</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">التاريخ</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">السعر</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">الشحن</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">المنطقة</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">الموبيل</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\">اسم المرسل اليه</StyledTableCell>\r\n                            <StyledTableCell id=\"tbh\" align=\"right\"> الحاله و العدد و التعليق || ({filterOrders.length})</StyledTableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {filterOrders.map(row => (\r\n                            <StyledTableRow key={[row.order_id]}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {row.order_id}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.client}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{moment(row.date.toDate()).format('dddd')}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.price}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.shipping}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.adress}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.mobile}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{row.clientName}</StyledTableCell>\r\n\r\n\r\n                                <StyledTableCell align=\"right\">\r\n                                    <Container id=\"contcell\">\r\n\r\n\r\n                                        <form onSubmit={(e) => handleChange12(row, e)} id=\"ddss\">\r\n                                            <TextField className=\"outlined-basic4\" id={row.order_id.toString() + \"comment\"} label=\"تعليق\" variant=\"outlined\" name={row.order_id.toString() + \"comment\"} type=\"text\" />\r\n                                            <TextField className=\"outlined-basic4\" id={row.order_id.toString() + \"goz2ii\"} label=\"السعر\" variant=\"outlined\" name={row.order_id.toString() + \"goz2ii\"} type=\"number\" />\r\n                                            {+(row.far2Sha7n) !== 0\r\n                                                ? < TextField className=\"outlined-basic4\" InputProps={{ readOnly: true, }} id=\"outlined-basic4\" variant=\"outlined\" type=\"number\" label=\"فرق شحن\" name=\"far2Sha7n\" value={row.far2Sha7n} required />\r\n                                                : <TextField className=\"outlined-basic4\" id={row.order_id.toString() + \"far2Sha7n\"} type=\"number\" variant=\"outlined\" label=\"فرق شحن\" name={row.order_id.toString() + \"far2Sha7n\"} onChange={(e) => handelFar2Sha7n(row, e)} />\r\n\r\n                                            }\r\n\r\n\r\n\r\n                                            <Select disabled={row.btnState}\r\n                                                labelId={row.order_id.toString() + \"demo-simple-select-outlined-label\"}\r\n                                                id=\"outlined\"\r\n                                                name=\"selectt\"\r\n                                                onChange={handelSelecctkhara}\r\n                                                className={classes.formCell}\r\n                                                variant=\"outlined\"\r\n\r\n                                            >\r\n                                                <MenuItem value={row.state}>\r\n                                                    لا شيء\r\n                                        </MenuItem>\r\n                                                <MenuItem value={1} name=\"tawsel\">\r\n                                                    <Button className=\"btndone\" disabled={row.btnState} variant=\"contained\" color=\"primary\" onClick={handelBtn}>\r\n                                                        تم التوصيل\r\n                                            </Button>\r\n                                                </MenuItem>\r\n                                                <MenuItem value={3} name=\"sha7nRasel\">\r\n                                                    <Button className=\"btndone\" disabled={row.btnState} variant=\"contained\" color=\"primary\" onClick={handelBtn}>\r\n                                                        شحن علي الراسل\r\n                                            </Button>\r\n                                                </MenuItem>\r\n                                                <MenuItem value={4} name=\"daf3Sha7n\">\r\n                                                    <Button className=\"btndone\" disabled={row.btnState} variant=\"contained\" color=\"primary\" onClick={handelBtn}>\r\n                                                        تم دفع الشحن\r\n                                            </Button>\r\n                                                </MenuItem>\r\n                                                <MenuItem value={2} name=\"la8i\">\r\n                                                    <Button className=\"btndone\" disabled={row.btnState} variant=\"contained\" color=\"primary\" onClick={handelBtn}>\r\n                                                        لاغي\r\n                                            </Button>\r\n                                                </MenuItem>\r\n\r\n\r\n                                                <MenuItem value={5} name=\"goz2i\">\r\n                                                    <Button className=\"btndone\" disabled={row.btnState} variant=\"contained\" color=\"primary\" onClick={handelBtn}>\r\n                                                        مرتجع جزئي\r\n                                            </Button>\r\n                                                </MenuItem>\r\n                                            </Select>\r\n                                            {/*\r\n                                                <MenuItem value={5} name=\"goz2i\">\r\n                                                    <Button disabled={row.btnState} variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleOpen}>\r\n                                                        جزئي\r\n                                            </Button>\r\n\r\n                                                </MenuItem>\r\n                                            */}\r\n\r\n\r\n\r\n                                            {/* <Button variant=\"contained\" color=\"primary\" component=\"span\" value={3}\r\n                                        onClick={(e) =>handleChange(row,e)} >\r\n                                        done             \r\n                                    </Button> */}\r\n                                            <Button className=\"btndone\" id={row.order_id} variant=\"contained\" color=\"primary\" disabled={row.done} onClick={(e) => handleChange12(row, e)}>\r\n                                                تم\r\n                                            </Button>\r\n\r\n                                            {/*  <Modal\r\n                                                aria-labelledby=\"simple-modal-title\"\r\n                                                aria-describedby=\"simple-modal-description\"\r\n                                                open={open}\r\n                                                onClose={handleClose}\r\n                                            >\r\n                                                <div style={modalStyle} className={classes.paper}>\r\n                                                    <h2 id=\"simple-modal-title\">عدل بيانات الاوردر</h2>\r\n                                                    <form className=\"goz2ii-data\">\r\n                                                        <TextField className={classes.root} id=\"outlined-basic2\" label=\"السعر\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"price\" required />\r\n                                                        <TextField className={classes.root} id=\"outlined-number\" label=\"سعر الشحن\" type=\"number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} name=\"shipping\" required />\r\n                                                        <Button id=\"btndone\" variant=\"contained\" color=\"primary\" disabled={row.done12} onClick={(e) => handleChange12(row, e)}>\r\n                                                            تم\r\n                                                        </Button>\r\n                                                        <Button id=\"close\" variant=\"contained\" color=\"secondary\" disabled={row.done12} onClick={handleClose12} >\r\n                                                            الغاء\r\n                                                        </Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                          </Modal>*/}\r\n                                        </form>\r\n                                    </Container>\r\n                                </StyledTableCell>\r\n\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n\r\n                    </TableBody>\r\n\r\n                </Table>\r\n                <form id=\"deliveryCalc\">\r\n                    <TextField id=\"outlined-basic6\" label=\"حساب المندوب\" variant=\"outlined\" name=\"deliverydayCalc\" type=\"number\" />\r\n\r\n                    <Button className=\"btndone\" disabled={calcFinish} id=\"btn123456789\" variant=\"contained\" color=\"primary\" onClick={handleChangeDelivery}>\r\n                        تم\r\n            </Button>\r\n                </form>\r\n            </TableContainer>\r\n\r\n        </div >\r\n    );\r\n}\r\n","import React ,{useEffect,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Table from './table';\r\nimport { db } from '../services/firebase';\r\nimport moment from \"moment\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SimpleModal(props) {\r\n    const day = props.day\r\n    const client = props.client\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\nconst [orders,setOrders]=useState([])\r\n\r\n\r\n useEffect(()=>{    \r\n    const ordersss = [];\r\n    db.collection('orders').where('client','==',client)\r\n    .get()\r\n    .then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n          ordersss.push(doc.data());\r\n        });\r\n    })\r\n    .catch(error => console.log(error));\r\n    const filteredOrders = ordersss.filter(order => {\r\n      console.log(\"qqq\")\r\n    return (moment(order.date.toDate()).format('l')===moment(day.toDate()).format('l'))\r\n})\r\n    setOrders(filteredOrders)\r\n  \r\n },[])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n       \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport moment from 'moment';\r\nimport Modal from './modalCalc'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles();\r\n  const total =props.data\r\n\r\n  return (\r\n    <div>\r\n        {total.map(order => (\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                         {moment(order.day.toDate()).format(\"Do MMM YY\")}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        el 7isab el kolly  \r\n                    ({order.total})\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n                    <Modal  day={order.day} client={props.client} />\r\n                <CardActions>\r\n         </CardActions>\r\n            </Card>\r\n        ))}\r\n\r\n    </div>\r\n);\r\n}","import React, { Component } from 'react'\r\nimport { db } from '../services/firebase';\r\nimport Button from '@material-ui/core/Button';\r\nimport Cards from \"./cards\";\r\nimport moment from \"moment\";\r\n\r\nexport default class selectClient extends Component {\r\n    state = {\r\n        client: \"\",\r\n        clients: []\r\n    }\r\n    componentDidMount() {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const clients = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n\r\n                    clients.push(data);\r\n                });\r\n                this.setState({ clients: clients });\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    handelSelectClient = (e) => {\r\n        this.setState({ client: e.target.value })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select value={\"this.state.client\"} onChange={this.handelSelectClient} required >\r\n                    <option onChange={this.handelSelectClient} value={this.state.client}>{this.state.client}</option>\r\n                    {this.state.clients.map(cl => <option value={cl.name}>{cl.name}</option>)}\r\n                </select>\r\n\r\n                <Cards client={this.state.client} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from \"moment\";\r\nimport { db } from '../services/firebase';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardCalc from './cards';\r\nimport '../style/base.css'\r\nimport swal from \"sweetalert\";\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nimport firebase from '../services/firebase';\r\nconst functions = firebase.functions()\r\nconst finishClientCalc = functions.httpsCallable(\"finishClientCalc\")\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n\r\n\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    formControl: {\r\n        margin: \"0 auto\",\r\n        minWidth: 100,\r\n\r\n    },\r\n    formCell: {\r\n        margin: theme.spacing(200),\r\n        minWidth: 100,\r\n\r\n    },\r\n    formtext: {\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2), color: green\r\n    },\r\n    table: {\r\n        minWidth: 200,\r\n\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n\r\n}));\r\n\r\nexport default function TableC(props) {\r\n\r\n    const Idees = props.IDDS;\r\n    const rows = props.orders;\r\n    const client = props.client\r\n\r\n    // const rows = props.orders.filter(row=>{\r\n    //     return rows.state == 0\r\n    // })\r\n    const classes = useStyles();\r\n    const [total, setTotal] = useState(0)\r\n    const [orders, setOrders] = useState([])\r\n    const [btnState, setBtnState] = useState(false)\r\n    const [dof3a, setDof3a] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let tot = 0\r\n        rows.forEach(ro => { tot += +(ro.price) - +(ro.far2Sha7n) })\r\n        db.collection(\"clients\").where(\"name\", \"==\", client)\r\n            .get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    const totalCalc = doc.data().totalCalc || []\r\n                    setDof3a(doc.data().dof3a)\r\n                    setOrders(totalCalc)\r\n                });\r\n            });\r\n        setTotal(tot);\r\n        setBtnState(false)\r\n    }, [client, rows])\r\n\r\n\r\n    function finishCalc() {\r\n\r\n        let total1 = total\r\n        rows.forEach(row => {\r\n\r\n            // da 47n 3la el rasel w bgm3 el price m3 shipping\r\n            if (row.state === 3) {\r\n                total1 -= (+(row.price) + +(row.shipping))\r\n\r\n                // da la8i w bgm3 s3r el 47n\r\n            } else if (row.state === 2) {\r\n                total1 -= +(row.price)\r\n\r\n\r\n                // Done\r\n            } else if (row.state === 1 || row.state === 5) {\r\n                total1 -= 0\r\n\r\n            }\r\n            // tm daf3 el sha7n\r\n            else if (row.state === 4) {\r\n                total1 -= +(row.price)\r\n\r\n            }\r\n\r\n            setTotal(total1 - dof3a);\r\n\r\n            console.log(total)\r\n        })\r\n\r\n        db.collection(\"clients\").where(\"name\", \"==\", client)\r\n            .get().then(function (querySnapshot) {\r\n\r\n                querySnapshot.forEach(function (doc) {\r\n                    const totalCalc = doc.data().totalCalc || []\r\n                    let i = 0;\r\n\r\n                    totalCalc.forEach(bob => {\r\n\r\n\r\n                        setDof3a(doc.data().dof3a)\r\n                        const dd = +(doc.data().dof3a)\r\n\r\n                        bob.total = total - dd\r\n                    })\r\n                    swal(\r\n\r\n                        {\r\n                            text: \"جاري انهاء الحساب \" + \"برجاء الانتظار ....\",\r\n                            buttons: false,\r\n                            closeOnClickOutside: false,\r\n\r\n                        }\r\n                    );\r\n                    finishClientCalc({\r\n                        total: total,\r\n                        done: true,\r\n                        client: client,\r\n                        orders: rows\r\n                    })\r\n                        .then((response) => {\r\n\r\n\r\n                            swal(\"تم تقفيل حساب اوردر\", \"...\", \"success\");\r\n\r\n                        })\r\n                    totalCalc.push({\r\n                        day: new Date(),\r\n                        total: total,\r\n                        done: true,\r\n                        client: client\r\n                    })\r\n                    db.collection('clients').doc(doc.id).update({ totalCalc: totalCalc })\r\n\r\n\r\n                    setOrders(totalCalc)\r\n\r\n                });\r\n\r\n            });\r\n        //Update the state of orders to finshed calculations\r\n        // rows.forEach(order => {\r\n        //     db.collection(\"orders\").where(\"order_id\", \"==\", order.order_id)\r\n        //         .onSnapshot(function (querySnapshot) {\r\n        //             querySnapshot.forEach(function (doc) {\r\n        //                 db.collection('orders').doc(doc.id).update({ done: true })\r\n        //             })\r\n        //         })\r\n        // })\r\n\r\n        setBtnState(true)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <TableContainer component={Paper}>\r\n            <h1>دفعات حالية ل{client === \"اختار العميل\" ? \"...\" : client} : {dof3a}</h1>\r\n            <h1 align=\"center\" >  {total} :حساب العميل اليومي </h1>\r\n            {/* <CardCalc data={orders} client={client} /> */}\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell id=\"tbh\" >ID</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">العميل</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">التاريخ</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">السعر</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">ملحوظة</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">فرق الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الحالة </StyledTableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n\r\n                        <StyledTableRow key={[row.order_id]}>\r\n                            <StyledTableCell id=\"cell\" component=\"th\" scope=\"row\">\r\n                                {row.order_id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.client}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{moment(row.date.toDate()).format('llll')}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{Number(row.price)}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.shipping}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.comment || \"لا يوجد تعليق\"}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.far2Sha7n}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{\r\n                                row.state === 3 ? \"شحن علي الراسل\"\r\n                                    : row.state === 2 ? \"لاغي\"\r\n                                        : row.state === 1 ? \"تم التوصيل\"\r\n                                            : row.state === 5 ? \"مرتجع جزئي\"\r\n                                                : row.state === 4 ? \"تم دفع الشحن\"\r\n                                                    : row.state === 5 ? \"مرتجع جزئي\"\r\n                                                        : row.state\r\n                            }</StyledTableCell>\r\n\r\n                        </StyledTableRow>\r\n\r\n                    ))}\r\n\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <Button id=\"btndone\" variant=\"contained\" color=\"primary\" component=\"span\" disabled={btnState}\r\n                onClick={finishCalc}>\r\n                Finish\r\n             </Button>\r\n\r\n            <TextField InputProps={{ readOnly: true, }} id=\"outlined-basic\" variant=\"outlined\" value={total} />\r\n        </TableContainer   >\r\n\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { db } from '../services/firebase';\r\n//import Table from \"./table\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DateSelector from \"./datecalc\";\r\nimport TableC from './table-calc'\r\n//import CardCalc from \"./cards\"\r\nimport '../style/base.css'\r\n\r\n\r\n\r\n\r\nclass Calc extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n        order: [],\r\n        clients: [],\r\n        client: \"اختار العميل\",\r\n        filteredOrders: [],\r\n        IDDS: [],\r\n        filteredclient: []\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const clients = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    data[\"idts\"] = doc.id;\r\n                    clients.push(data);\r\n                });\r\n                this.setState({ clients: clients });\r\n                //  console.log(this.state.clients);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        db.collection('orders').where('state', '>', 0).where('done', '==', false)\r\n            .onSnapshot(snapshot => {\r\n                const orders = [];\r\n                const IDDS = [];\r\n\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    IDDS.push(doc.id);\r\n                    orders.push(data);\r\n                });\r\n\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                this.setState({\r\n                    order: orders,\r\n                    IDDS: IDDS\r\n                });\r\n            })\r\n\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            return (order.client === this.state.client)\r\n        })\r\n        const filteredclient = this.state.clients.filter(client => {\r\n            return (client.name === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n        this.setState({ filteredclient })\r\n\r\n\r\n    };\r\n\r\n\r\n    handelSelectClient = (e) => {\r\n        this.setState({ client: e.target.value })\r\n\r\n    }\r\n    handelFilter = () => {\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <center> <h2>*******************Filter by Date Section****************</h2> </center>\r\n                <DateSelector orders={this.state.order} />\r\n                <br />\r\n                <br />\r\n                <br /> */}\r\n\r\n                <center> <h1> حسابات العميل </h1> </center>\r\n                <center><select value={\"this.state.client\"} onChange={this.handelSelectClient} required >\r\n                    <option onChange={this.handelSelectClient} value={this.state.client}>{this.state.client}</option>\r\n                    {this.state.clients.map(cl => <option value={cl.name}>{cl.name}</option>)}\r\n                </select>\r\n                </center>\r\n                <ul>\r\n\r\n\r\n\r\n                </ul>\r\n                <center>\r\n\r\n                    <Button id=\"btnorder\" variant=\"contained\" color=\"secondary\" onClick={this.handelFilter}>\r\n                        البحث عن العميل\r\n                    </Button>\r\n                </center>\r\n\r\n                {/* // <DateSelector\r\n                //     IDDS={this.state.IDDS}\r\n                //     orders={this.state.filteredOrders}\r\n                //     client={this.state.client}\r\n                //     ihab=\"yasserr\"\r\n               // />*/}\r\n                <TableC orders={this.state.filteredOrders} IDDS={this.state.IDDS} client={this.state.client} />\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Calc;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from \"moment\";\r\nimport { db } from '../services/firebase';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardCalc from './cards';\r\nimport '../style/base.css'\r\n\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nexport default function TableC(props) {\r\n\r\n    const Idees = props.IDDS;\r\n    const rows = props.orders;\r\n    const client = props.client\r\n\r\n    // const rows = props.orders.filter(row=>{\r\n    //     return rows.state == 0\r\n    // })\r\n    const classes = useStyles();\r\n    const [total, setTotal] = useState(0)\r\n    const [orders, setOrders] = useState([])\r\n    const [btnState, setBtnState] = useState(false)\r\n    const [dof3a, setDof3a] = useState(0)\r\n\r\n    useEffect(() => {\r\n        let tot = 0\r\n        rows.forEach(ro => { tot += +(ro.price) + +(ro.far2Sha7n) })\r\n\r\n        db.collection(\"clients\").where(\"name\", \"==\", client)\r\n            .get().then(function (querySnapshot) {\r\n\r\n                querySnapshot.forEach(function (doc) {\r\n                    const totalCalc = doc.data().totalCalc || []\r\n                    totalCalc.forEach(element => {\r\n                        if (moment(element.day.toDate()).format('l') === moment(new Date()).format('l')) {\r\n                            console.log(element.dof3a)\r\n                            setDof3a(element.dof3a)\r\n                        }\r\n                    });\r\n                    setOrders(totalCalc)\r\n                });\r\n            });\r\n        setTotal(tot);\r\n        console.log(tot)\r\n        setBtnState(false)\r\n    }, [client, rows])\r\n\r\n\r\n    function finishCalc() {\r\n\r\n        let total1 = total\r\n        rows.forEach(row => {\r\n\r\n            // da 47n 3la el rasel w bgm3 el price m3 shipping\r\n            if (row.state === 3) {\r\n                total1 -= (+(row.price) + +(row.shipping))\r\n\r\n                // da la8i w bgm3 s3r el 47n\r\n            } else if (row.state === 2) {\r\n                total1 -= +(row.price)\r\n\r\n\r\n                // Done\r\n            } else if (row.state === 1) {\r\n                total1 -= 0\r\n\r\n            }\r\n            // tm daf3 el sha7n\r\n            else if (row.state === 4) {\r\n                total1 -= +(row.price)\r\n\r\n            }\r\n\r\n            setTotal(total1 - dof3a);\r\n            console.log(total)\r\n        })\r\n\r\n        db.collection(\"clients\").where(\"name\", \"==\", client)\r\n            .get().then(function (querySnapshot) {\r\n\r\n                querySnapshot.forEach(function (doc) {\r\n                    const totalCalc = doc.data().totalCalc || []\r\n                    let i = 0;\r\n\r\n                    totalCalc.forEach(bob => {\r\n                        console.log(moment(bob.day.toDate()).format('l'), moment(new Date()).format('l'))\r\n                        if (moment(bob.day.toDate()).format('l') === moment(new Date()).format('l')) {\r\n                            console.log(bob.dof3a)\r\n                            setDof3a(bob.dof3a)\r\n                            bob.total = total - dof3a\r\n                            console.log('Matgm3 b2a yasta')\r\n                        } else {\r\n                            i++;\r\n                        }\r\n                    })\r\n                    console.log(i, totalCalc.length)\r\n                    if (i === totalCalc.length) {\r\n\r\n                        totalCalc.push({\r\n                            day: new Date(),\r\n                            total: total,\r\n                            dof3a: 0,\r\n                            done: true\r\n                        })\r\n\r\n                    }\r\n\r\n                    db.collection('clients').doc(doc.id).update({ totalCalc: totalCalc })\r\n\r\n\r\n                    setOrders(totalCalc)\r\n\r\n                });\r\n\r\n            });\r\n        rows.forEach(order => {\r\n\r\n        })\r\n\r\n\r\n        setBtnState(true)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell id=\"tbh\" >ID</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">العميل</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">التاريخ</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">السعر</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">سعر المرتجع الجزئي</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">ملحوظة</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">فرق الشحن</StyledTableCell>\r\n                        <StyledTableCell id=\"tbh\" align=\"right\">الحالة </StyledTableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n\r\n                        <StyledTableRow key={[row.order_id]}>\r\n                            <StyledTableCell id=\"cell\" component=\"th\" scope=\"row\">\r\n                                {row.order_id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.client}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{moment(row.date.toDate()).format('llll')}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{Number(row.old_price)}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{\r\n                                +row.price === +row.old_price ? \"لا يوجد\" : row.price}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.shipping}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.comment || \"لا يوجد تعليق\"}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{row.far2Sha7n}</StyledTableCell>\r\n                            <StyledTableCell id=\"cell\" align=\"right\">{\r\n                                row.state === 3 ? \"شحن علي الراسل\" : row.state === 2 ? \"لاغي\"\r\n                                    : row.state === 1 ? \"تم التوصيل\"\r\n                                        : row.state === 4 ? \"تم دفع الشحن\"\r\n                                            : row.state === 5 ? \"مرتجع جزئي\" : row.state\r\n                            }</StyledTableCell>\r\n\r\n                        </StyledTableRow>\r\n\r\n                    ))}\r\n\r\n                </TableBody>\r\n            </Table>\r\n\r\n\r\n\r\n        </TableContainer   >\r\n\r\n\r\n    );\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from \"moment\";\r\n//import Table from \"./table\";\r\nimport  DisTable from './discardedTable'\r\nimport '../style/base.css'\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function MaterialUIPickers(props) {\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        console.log(date)\r\n        \r\n    };\r\n    //console.log(moment(selectedDate).format('dddd'))\r\n    const orders = props.orders.filter(order => {\r\n        return moment(order.date.toDate()).format('dddd') === moment(selectedDate).format(\"dddd\");\r\n    });\r\n    //  console.log(orders)\r\n    return (\r\n        \r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n\r\n\r\n            <Container id=\"contdate\">\r\n\r\n                <KeyboardDatePicker\r\n                    id=\"btnorder\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"اختار تاريخ الأوردر\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                    />\r\n                </Container>\r\n                <DisTable orders={orders} IDDS={props.IDDS} client={props.client}/>\r\n\r\n\r\n\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { db } from '../services/firebase';\r\n//import Table from \"./table\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Selectdis from \"./discardedSelector\";\r\n//import CardCalc from \"./cards\"\r\n\r\n\r\n\r\n\r\n\r\nimport '../style/base.css'\r\n\r\n\r\n\r\n\r\nclass Discarded extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n        order: [],\r\n        clients: [],\r\n        client: \"اختار العميل\",\r\n        filteredOrders: [],\r\n        IDDS: []\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const clients = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    clients.push(data);\r\n                });\r\n                this.setState({ clients: clients });\r\n                //  console.log(this.state.clients);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        db.collection('orders').where('state', 'in', [2, 3, 4, 5]).where(\"done\", \"==\", true)\r\n            .onSnapshot(snapshot => {\r\n                const orders = [];\r\n                const IDDS = [];\r\n\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    IDDS.push(doc.id);\r\n                    orders.push(data);\r\n                });\r\n\r\n                orders.sort((a, b) => {\r\n                    if (a.order_id > b.order_id) {\r\n                        return -1\r\n                    } else\r\n                        return 1\r\n                })\r\n                this.setState({\r\n                    order: orders,\r\n                    IDDS: IDDS\r\n                });\r\n            })\r\n\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n\r\n\r\n    };\r\n\r\n\r\n    handelSelectClient = (e) => {\r\n        this.setState({ client: e.target.value })\r\n\r\n    }\r\n    handelFilter = () => {\r\n        const filteredOrders = this.state.order.filter(order => {\r\n            //   console.log(order.client, this.state.client)\r\n            return (order.client === this.state.client)\r\n        })\r\n        this.setState({ filteredOrders })\r\n        // console.log(this.state.filteredOrders)\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <center> <h2>*******************Filter by Date Section****************</h2> </center>\r\n                <DateSelector orders={this.state.order} />\r\n                <br />\r\n                <br />\r\n                <br /> */}\r\n\r\n                <center> <h1>  العميل </h1> </center>\r\n                <center><select value={\"this.state.client\"} onChange={this.handelSelectClient} required >\r\n                    <option onChange={this.handelSelectClient} value={this.state.client}>{this.state.client}</option>\r\n                    {this.state.clients.map(cl => <option value={cl.name}>{cl.name}</option>)}\r\n                </select>\r\n                </center>\r\n\r\n                <center>\r\n\r\n                    <Button id=\"btnorder\" variant=\"contained\" color=\"secondary\" onClick={this.handelFilter}>\r\n                        البحث عن العميل\r\n                    </Button>\r\n                </center>\r\n\r\n                <Selectdis IDDS={this.state.IDDS} orders={this.state.filteredOrders} client={this.state.client} />\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Discarded;","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { db } from '../services/firebase';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport moment from \"moment\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport '../style/base.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { set } from 'date-fns';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"0 auto\",\r\n        textAlign: \"center\",\r\n        maxWidth: \"80%\",\r\n        direction: \"rtl\"\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    FormControl: {\r\n        margin: \"0 auto\",\r\n        minWidth: 200,\r\n    },  \r\n    selectEmpty: {\r\n        minWidth: 200,\r\n    },\r\n});\r\nexport default function SimpleCard() {\r\n    const classes = useStyles();\r\n    const [clients, setClients] = React.useState([])\r\n    const [clientname, setClientname] = React.useState(\"\")\r\n    const [cards, setCards] = React.useState([])\r\n    const [clientcalc, setClientcalc] = React.useState(\"\")\r\n    const [clientmobile, setClientmobile] = React.useState(\"\")\r\n    const clientss = []\r\n    React.useEffect(() => {\r\n        db.collection('clients')\r\n            .get()\r\n            .then(snapshot => {\r\n                const delivery = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    delivery.push(data);\r\n                });\r\n                setClients(delivery);\r\n            })\r\n            .catch(error => console.log(error));\r\n        db.collection('clc_finished')\r\n            .get()\r\n            .then(snapshot => {\r\n                const cards1 = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    cards1.push(data);\r\n                });\r\n                setCards(cards1);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(clientss)\r\n\r\n    function handelSelectClient(e) {\r\n\r\n        setClientname(e.target.value)\r\n        db.collection('clc_finished').where('client', '==', e.target.value)\r\n            .get()\r\n            .then(snapshot => {\r\n                const cards1 = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    cards1.push(data);\r\n                });\r\n                setCards(cards1);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Container id=\"contselect\" >\r\n            <FormControl required className={classes.formControl}>\r\n\r\n                <InputLabel id=\"demo-simple-select-required-label\">اختار المندوب</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-required-label\"\r\n                    id=\"demo-simple-select-required\"\r\n                    value={[clients][0].name}\r\n                    onChange={handelSelectClient}\r\n                    className={classes.selectEmpty}\r\n                >\r\n\r\n                    {clients.map(delivery => <MenuItem value={delivery.name}>{delivery.name}</MenuItem>)}\r\n\r\n\r\n                </Select>\r\n            </FormControl>\r\n\r\n            </Container>\r\n            <Container className=\"card-container\">\r\n\r\n            {cards.map(card => {\r\n                return (\r\n                    <Card className={classes.root} className=\"card-boody\" >\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                <h3> {card.client} </h3>\r\n\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                <h4> {moment(card.day.toDate()).format('LL')}</h4>\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <h4> {\" عدد الاوردارات : \" + card.orders.length} </h4>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                <h4> {\" اجمالي الحساب : \" + card.total}</h4>\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n\r\n\r\n\r\n                    </Card>)\r\n            })}\r\n            </Container>\r\n\r\n        </div >\r\n    );\r\n}\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { db } from '../services/firebase';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport moment from \"moment\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport '../style/base.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { set } from 'date-fns';\r\nimport { Container } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"0 auto\",\r\n        textAlign: \"center\",\r\n        maxWidth: \"80%\",\r\n        direction: \"rtl\"\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    FormControl: {\r\n        margin: \"0 auto\"\r\n    },\r\n    selectEmpty :{\r\n        minWidth: 200,\r\n    }\r\n});\r\nexport default function SimpleCard() {\r\n    const classes = useStyles();\r\n    const [clients, setClients] = React.useState([])\r\n    const [clientname, setClientname] = React.useState(\"\")\r\n    const [cards, setCards] = React.useState([])\r\n    const clientss = []\r\n    React.useEffect(() => {\r\n        db.collection('delivery')\r\n            .get()\r\n            .then(snapshot => {\r\n                const delivery = [];\r\n                const car = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    delivery.push(data);\r\n                    doc.data().calc.forEach(cal => {\r\n                        car.push(cal)\r\n                    })\r\n                });\r\n                setClients(delivery);\r\n                setCards(car);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    console.log(clientss)\r\n\r\n    function handelSelectClient(e) {\r\n\r\n        setClientname(e.target.value)\r\n        db.collection('delivery').where('name', '==', e.target.value)\r\n            .get()\r\n            .then(snapshot => {\r\n                const cards1 = [];\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data();\r\n                    data.calc.forEach(cal => {\r\n                        cards1.push(cal);\r\n                    })\r\n                });\r\n                setCards(cards1);\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container id=\"contselect\" >\r\n            <FormControl required className={classes.formControl} className='select-card'>\r\n                <InputLabel id=\"demo-simple-select-required-label\">اختار المندوب</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-required-label\"\r\n                    id=\"demo-simple-select-required\"\r\n                    value={[clients][0].name}\r\n                    onChange={handelSelectClient}\r\n                    className={classes.selectEmpty}\r\n                >\r\n\r\n                    {clients.map(delivery => <MenuItem value={delivery.name}>{delivery.name}</MenuItem>)}\r\n\r\n\r\n                </Select>\r\n\r\n            </FormControl>\r\n\r\n            </Container>\r\n            <Container  className=\"card-container\" >\r\n\r\n            {cards.map(card => {\r\n                return (\r\n                    <Card className={classes.root} className=\"card-boody\" >\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                <h3> {clientname} </h3>\r\n\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                <h4> {moment(card.day).format('LL')}</h4>\r\n                            </Typography>\r\n\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                <h4> {\" اجمالي الحساب : \" + card.total}</h4>\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n\r\n\r\n\r\n                    </Card>)\r\n            })}\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport Client from './clients';\r\nimport Delivery from './delivery';\r\nimport Order from './orders';\r\nimport Nav from './newNav';\r\nimport FilterBy from './filterby';\r\nimport FilterByClient from './filterbyclient';\r\nimport Search from './search';\r\nimport ChooseDelivert from './addorderfordelivery';\r\nimport DeliveryOrders from './deliveryOrders';\r\nimport clientProfile from './selectClient';\r\nimport Calc from './calc';\r\nimport Discarded from './discarded'\r\nimport calcCards from './calc-cards'\r\nimport moreOrders from './more-orders'\r\nimport '../style/base.css';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      // <div>\r\n      //   <Order/>\r\n      //   <Calc/>\r\n\r\n      // </div>\r\n\r\n      <BrowserRouter>\r\n        <div>\r\n\r\n          <Nav />\r\n          <Route exact path='/' component={Client} />\r\n          <Route exact path='/Delivery' component={Delivery} />\r\n          <Route exact path='/Order' component={Order} />\r\n          <Route exact path='/FilterBy' component={FilterBy} />\r\n          <Route exact path='/FilterByClient' component={FilterByClient} />\r\n          <Route exact path='/Search' component={Search} />\r\n          <Route exact path='/ChooseDelivert' component={ChooseDelivert} />\r\n          <Route exact path='/DeliveryOrders' component={DeliveryOrders} />\r\n          <Route exact path='/clientProfile' component={clientProfile} />\r\n          <Route exact path='/Calc' component={Calc} />\r\n          <Route exact path='/Discarded' component={Discarded} />\r\n          <Route exact path='/CalcCards' component={calcCards} />\r\n          <Route exact path='/moreOrders' component={moreOrders} />\r\n\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Test1\r\n// class App extends React.Component{\r\n\r\n//   render(){\r\n//       return(\r\n//         <div>\r\n//            {/* <Client/>\r\n\r\n//           <Delivery/> */}\r\n//     <div className=\"App__form\"></div>\r\n//     <div className=\"App__Aside\"></div>\r\n//         </div>\r\n//       )\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Test 2 \r\n// <Router basename=\"/react-auth-ui/\">\r\n      //   <div className=\"App\">\r\n      //     <div className=\"App__Aside\"></div>\r\n      //     <div className=\"App__Form\">\r\n      //       <div className=\"PageSwitcher\">\r\n      //           <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\r\n      //           <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\r\n      //         </div>\r\n\r\n      //         <div className=\"FormTitle\">\r\n      //             <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\r\n      //         </div>\r\n\r\n\r\n      //         <Route path=\"/sign-in\" component={Client}>\r\n      //         </Route>\r\n      //     </div>\r\n\r\n      //   </div>\r\n      // </Router>","import React from 'react';\r\n/*material-ui imports...you must install material-ui/core to import like this...example: npm install @material-ui/core*/\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport '../style/base.css';\r\nimport logo from '../style/logo.png';\r\nimport PropTypes from 'prop-types';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport firebase from '../services/firebase'\r\n\r\n\r\n\r\n\r\n\r\n  \r\n//Email regex to validate the form of the email\r\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\n\r\nconst formValid = ({formErrors, ...rest }) => {\r\n    let valid = true;\r\n\r\n    //validate the formErrors length\r\n    Object.values(formErrors).forEach(value => {\r\n        value.length > 0 && (valid = false)\r\n    });\r\n\r\n    //validate the formInput's values length\r\n    Object.values(rest).forEach(value => {\r\n        value == null && (valid = false)\r\n    });\r\n\r\n    return valid;\r\n}\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            formErrors: {\r\n                email: \"\",\r\n                password: \"\"\r\n            },\r\n            show: false\r\n        };\r\n    }\r\n\r\n    \r\n    \r\n    //submit function to handle the errors and submission\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(formValid(this.state)){\r\n            firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.password).then((u)=>{\r\n                console.log(u)\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            })\r\n            \r\n        }else{\r\n            console.error(\"form invalid - display\", this.state.show);\r\n            this.state.show =  true;\r\n            console.log(this.state.show);\r\n        }\r\n    }\r\n\r\n\r\n    //function to handle the changes in the inputs and to set the errors in the form errors array in state\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        let formErrors = this.state.formErrors;\r\n        \r\n        switch (name){\r\n          \r\n            case 'email':\r\n                formErrors.email = emailRegex.test(value) \r\n                    ? '' \r\n                    : \"Invalid email address\";\r\n                break;\r\n            case 'password':\r\n                formErrors.password = value.length < 6 //if the password is < 6 put this text in the password field in the formerrors array \r\n                    ? \"the password length must be at least 6\" \r\n                    : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //storing the data in the state\r\n        this.setState({formErrors, [name] : value}, () => {\r\n            console.log(this.state);\r\n        })\r\n    }\r\n    \r\n    render(){\r\n         \r\n        const {formErrors} = this.state;\r\n\r\n        return(\r\n            <div>\r\n            <div id=\"bglogin\" >\r\n                \r\n\r\n                <Hidden  only={['xs']}>\r\n                    <Container  id=\"contnav\">\r\n                    <nav className=\"Navbar\" >\r\n                        <img id=\"contlogo\" src={logo} alt=\"logo.png\"/>\r\n                    </nav>\r\n                    </Container>\r\n                </Hidden>\r\n                <Hidden  only={['lg', 'md', 'sm', 'xl']}>\r\n                    <nav className=\"Navbar\" id=\"contnavxs\" >\r\n                        <img id=\"contlogoxs\" src={logo} alt=\"logo.png\"/>\r\n                    </nav>\r\n                </Hidden>\r\n\r\n\r\n\r\n                    <Container id=\"contcont\">\r\n\r\n                    <Container className = \"login-container-Tm\" maxWidth=\"sm\"  >\r\n                        <h1 className = \"login-head-Tm\"> تسجيل الدخول</h1>\r\n                        <form onSubmit = {this.handleSubmit}  >\r\n\r\n                           \r\n                                \r\n                               <Container container spacing = {3} id=\"cont-textfield\">\r\n\r\n                                    <TextField \r\n                                        id=\"outlined-basic2\"\r\n                                        label=\"الإيميل\"\r\n                                        onChange = {this.handleChange} \r\n                                        className={formErrors.email.length > 0 ? \"error\" : null}\r\n                                        margin=\"normal\"\r\n                                        variant=\"outlined\"\r\n                                        name = \"email\"\r\n                                        fullWidth\r\n                                        />\r\n                                    {\r\n                                        formErrors.email.length > 0 && (\r\n                                            <span className = \"signUpForm-error-Tm\">{formErrors.email}</span>\r\n                                            )\r\n                                        }\r\n                                \r\n                               </Container>\r\n                                \r\n                                <Container>\r\n                                    <TextField \r\n                                        id=\"outlined-password-input2\"\r\n                                        label=\"كلمة المرور\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        variant=\"outlined\"\r\n                                        name = \"password\"\r\n                                        fullWidth\r\n                                        onChange = {this.handleChange}\r\n                                        container spacing = {3}\r\n                                        />\r\n                                \r\n                                    {\r\n                                        formErrors.password.length > 0 && (\r\n                                            <span className = \"login-error-Tm\">{formErrors.password}</span>\r\n                                            )\r\n                                        }\r\n                                \r\n                                \r\n\r\n                                </Container>\r\n                                    {\r\n                                        \r\n                                        <Button \r\n                                        type = \"submit\"\r\n                                            id =\"btn-login\"\r\n                                            onClick={(e) => { //choosing when to show the sweet alert component\r\n                                                this.handleSubmit(e)\r\n                                                formValid(this.state) ?\r\n                                                this.setState({ show: false }) :\r\n                                                this.setState({ show: true })\r\n                                            }}   \r\n                                            >\r\n                                         تسجيل دخول\r\n                                        </Button>\r\n                                    \r\n                                }\r\n                                \r\n                                {/* <Grid container justify=\"flex-end\"  >\r\n                                    <Grid item>\r\n                                       <Link id=\"link\">\r\n                                              تسجيل دخول\r\n                                       </Link>\r\n                                       \r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                       \r\n                                              لديك حساب بالفعل؟     \r\n                                       \r\n                                    </Grid>\r\n                                </Grid>                             */}\r\n                            \r\n                        </form>\r\n                        <SweetAlert //pop up error message\r\n                            show={this.state.show}\r\n                            title=\"عفوا ، لم تتم عملية الدخول \"\r\n                            text=\"إملأ البيانات بشكل صحيح وحاول مرة أخرى\"\r\n                            onConfirm={() => this.setState({ show: false })}\r\n                            />\r\n                    </Container>\r\n                            </Container>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n    width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired,\r\n  };\r\n  \r\n  export default withWidth()(Login);\r\n\r\n","import React from 'react';\nimport { Component } from 'react';\n// import { Route, BrowserRouter } from 'react-router-dom';\n// import Client from './components/clients';\n// import Delivery from './components/delivery';\n// import Order from './components/orders';\n// import Nav from './components/newNav';\n// import FilterBy from './components/filterby';\n// import FilterByClient from './components/filterbyclient';\n// import Search from './components/search';\n// import ChooseDelivert from './components/addorderfordelivery';\n// import DeliveryOrders from './components/deliveryOrders';\n// import clientProfile from './components/selectClient';\n// import Calc from './components/calc';\n import Home from './components/Home';\n import firebase from './services/firebase'\n\nimport './style/base.css';\nimport Login from './components/login'\n\n\n\n\n\nclass App extends Component {\n\n  constructor(props){\n      super(props);\n      this.state={\n          user:{}\n\n      }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n  authListener(){\n      firebase.auth().onAuthStateChanged((user)=>{\n          if(user){\n            this.setState({user})\n          }else{\n            this.setState({user : null})\n          }\n      })\n  }\n\n\n\n\n  render() {\n    return (\n\n      \n      \n          <div className=\"App\" >\n            {this.state.user ? (<Home/>) : (<Login/>)}\n          \n            \n          </div>\n\n      // <BrowserRouter>\n      //   <div>\n\n      //     <Nav />\n      //     <Route exact path='/' component={Client} />\n      //     <Route exact path='/Delivery' component={Delivery} />\n      //     <Route exact path='/Order' component={Order} />\n      //     <Route exact path='/FilterBy' component={FilterBy} />\n      //     <Route exact path='/FilterByClient' component={FilterByClient} />\n      //     <Route exact path='/Search' component={Search} />\n      //     <Route exact path='/ChooseDelivert' component={ChooseDelivert} />\n      //     <Route exact path='/DeliveryOrders' component={DeliveryOrders} />\n      //     <Route exact path='/clientProfile' component={clientProfile} />\n      //     <Route exact path='/Calc' component={Calc} />\n\n\n      //   </div>\n      // </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Test1\n// class App extends React.Component{\n\n//   render(){\n//       return(\n//         <div>\n//            {/* <Client/>\n\n//           <Delivery/> */}\n//     <div className=\"App__form\"></div>\n//     <div className=\"App__Aside\"></div>\n//         </div>\n//       )\n//   }\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n//Test 2 \n// <Router basename=\"/react-auth-ui/\">\n      //   <div className=\"App\">\n      //     <div className=\"App__Aside\"></div>\n      //     <div className=\"App__Form\">\n      //       <div className=\"PageSwitcher\">\n      //           <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n      //           <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n      //         </div>\n\n      //         <div className=\"FormTitle\">\n      //             <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n      //         </div>\n\n\n      //         <Route path=\"/sign-in\" component={Client}>\n      //         </Route>\n      //     </div>\n\n      //   </div>\n      // </Router>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {};\r\nconst authReducer = (state = initState, action) => {\r\n    return state\r\n}\r\nexport default authReducer;","\r\nconst initState = {\r\n\r\n}\r\n\r\nconst orderReducer = (state = initState, action) => {\r\n    console.log(\"teeeet\", state)\r\n    return state\r\n}\r\nexport default orderReducer;","import authReducer from \"./authReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport { combineReducers } from 'redux'\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    order: orderReducer\r\n});\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d678ff36.png\";"],"sourceRoot":""}